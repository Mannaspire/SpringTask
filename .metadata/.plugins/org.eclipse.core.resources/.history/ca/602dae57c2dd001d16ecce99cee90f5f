package com.example.demo.controllers;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.boot.autoconfigure.SpringBootApplication;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.*;
import org.springframework.web.multipart.MultipartFile;
import org.springframework.web.servlet.support.ServletUriComponentsBuilder;
import org.springframework.http.MediaType;

import com.example.demo.models.Products;
import com.example.demo.payload.response.MessageResponse;
import com.example.demo.repository.ProductsRepo;
import com.example.demo.security.service.ProductsService;

import java.io.IOException;
import java.net.http.HttpHeaders;
import java.util.List;
import java.util.stream.Collectors;

@RestController
@RequestMapping("/api")
public class ProductsController {

	@Autowired
	ProductsService productsService;

//	@Autowired
//ProductsRepo productsRepo;

//	@ResponseStatus(value = HttpStatus.OK)
//	@PostMapping("/addProducts")
//	public void saveProduct(@RequestParam(value = "file") MultipartFile file, @RequestParam("name") String name,
//			@RequestParam("price") String price, @RequestParam("description") String description, @RequestParam("category") String category, @RequestParam("vendor") String vendor ) throws IOException {
//		productsService.saveProduct(file, name, description, price, category,vendor);
//	}
//	
//	@GetMapping("/allproducts")
//	public List<Products> showProduct() {
//		return productsRepo.findAll();
//	}
//
//	@PostMapping("/updateName")
//	public String updateName(@RequestParam("id") Long id, @RequestParam("newName") String name) {
//		productsService.updateProductName(id, name);
//		return "redirect:/listProducts.html";
//	}
//
//	@PostMapping("/updateDescription")
//	public String updateDescription(@RequestParam("id") Long id, @RequestParam("newDescription") String description) {
//		productsService.updateProductDescription(id, description);
//		return "redirect:/listProducts.html";
//	}
//
//	@PostMapping("/updatePrice")
//	public String updatePrice(@RequestParam("id") Long id, @RequestParam("newPrice") String price) {
//		productsService.updateProductPrice(id, price);
//		return "redirect:/listProducts.html";
//	}
//	
//	@PostMapping("/updateCategory")
//	public String updateCategory(@RequestParam("id") Long id, @RequestParam("newCategory") String category) {
//		productsService.updateProductPrice(id, category);
//		return "redirect:/listProducts.html";
//	}

	@PostMapping("/upload")
	public ResponseEntity<MessageResponse> uploadFile(@RequestParam(value = "file") MultipartFile file,
			@RequestParam("name") String name, @RequestParam("price") String price,
			@RequestParam("description") String description, @RequestParam("category") String category,
			@RequestParam("vendor") String vendor) {

		productsService.store(file, name, price,description, category,vendor);
    	return ResponseEntity.ok(new MessageResponse("Product registered successfully!"));
    	
	}

	@GetMapping("/files")
	public ResponseEntity<List<MessageResponse>> getListFiles() {
		List<MessageResponse> files = productsService.getAllFiles().map(dbFile -> {
			String fileDownloadUri = ServletUriComponentsBuilder.fromCurrentContextPath().path("/files/")
					.path(dbFile.getId()).toUriString();

			return new ResponseFile(dbFile.getName(), fileDownloadUri, dbFile.getType(), dbFile.getData().length);
		}).collect(Collectors.toList());

		return ResponseEntity.status(HttpStatus.OK).body(files);
	}

	@GetMapping("/files/{id}")
	public ResponseEntity<byte[]> getFile(@PathVariable String id) {
		Products products = productsService.getFile(id);

		return ResponseEntity.ok()
				.header(HttpHeaders.CONTENT_DISPOSITION, "attachment; filename=\"" + products.getName() + "\"")
				.body(products.getData());
	}

}
